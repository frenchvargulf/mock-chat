{"version":3,"sources":["components/GetUsername.js","components/Message.js","components/TypingIndicator.js","components/WhosOnlineList.js","components/RoomList.js","components/NewRoom.js","components/components.js","components/Menu.js","components/Nav.js","methods.js","components/ImageUploadDialog.js","components/UpperContainer.js","components/Chat.js","App.js","serviceWorker.js","index.js","components/annabelle.png","components/yoda.png"],"names":["GetUsername","props","state","username","e","preventDefault","this","onSubmit","setState","target","value","className","type","placeholder","onChange","Component","Img","src","alt","Message","key","id","style","width","height","backgroundImage","senderId","yoda","cat","time","text","linktext","href","media","link","TypingIndicator","typingUsers","length","slice","join","WhosOnlineList","users","map","user","index","currentUser","presenceState","name","presence","onClick","sendDM","renderUsers","WhosOnlineListItem","styles","li","display","alignItems","marginTop","marginBottom","paddingTop","paddingBottom","div","borderRadius","marginRight","backgroundColor","children","RoomLink","isRoomActive","room","currentRoom","subscribeToRoom","unreadCount","React","RoomList","orderedRooms","rooms","sort","a","b","isPrivate","NewRoomForm","roomName","handleChange","bind","handleSubmit","createRoom","Canvas","isPainting","colors","userStrokeStyle","user1StrokeStyle","user2StrokeStyle","line","userId","prevPos","offsetX","offsetY","userIds","data","pusher","Pusher","cluster","nativeEvent","offSetData","position","start","stop","concat","paint","sendPaintData","currPos","strokeStyle","x","y","ctx","beginPath","moveTo","lineTo","stroke","body","fetch","method","JSON","stringify","headers","req","json","res","console","log","Promise","resolve","canvas","getContext","lineJoin","lineCap","lineWidth","subscribe","forEach","ref","background","zIndex","onMouseDown","onMouseLeave","endPaintEvent","onMouseUp","onMouseMove","Paint","handleClick","Menu","visibility","menuVisibility","handleMouseDown","NewRoom","MenuContainer","visible","toggleMenu","stopPropagation","onDrop","pictureFiles","pictures","openImageUploadDialog","showImageUploadDialog","closeImageUploadDialog","sendFile","event","fileUploadMessage","parts","trim","push","content","pic","file","sendMultipartMessage","roomId","handleSlashCommand","message","cmd","split","query","sendNews","call","alert","then","articles","article","title","source","url","catch","error","ImageUploadDialog","handleInput","sendMessage","withIcon","buttonText","imgExtension","maxFileSize","withPreview","UpperContainer","jsemoji","JSEMOJI","img_set","img_sets","emojione","path","supports_css","allow_native","init_env","replace_mode","Chat","messages","chatInput","joinableRooms","joinedRooms","newMessage","showEmojiPicker","openGiphyPicker","emoji","gifs","language","getRooms","startsWith","gif","isTypingIn","getJoinableRooms","err","messageLimit","hooks","onMessage","newMessages","attachment","format","Date","updatedAt","match","setReadCursor","onRoomUpdated","findIndex","r","onUserStartedTyping","onUserStoppedTyping","filter","onPresenceChange","forceUpdate","openEmojiPicker","ids","isPrivateChatCreated","customData","isDirectMessage","arr","private","addUserIds","object","replace_colons","unified","lo2g","Chatkit","ChatManager","instanceLocator","currentUsername","tokenProvider","TokenProvider","connect","downsized","ROOT_CSS","css","minHeight","border","autoFocus","sendTypingEvent","showGiphyPicker","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","onSelected","onEmojiClick","addEmoji","App","visibleScreen","password","response","onUsernameSubmitted","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4c246324.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./GetUsername.scss\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n    class GetUsername extends Component {\r\n     constructor(props) {\r\n       super(props)\r\n       this.state = {\r\n         username: '',\r\n        //  password: ''\r\n       }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.username)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"welcome-section\">\r\n            <div className=\"wrapper\">\r\n                <h2 className=\"login-header\">Login</h2>\r\n                <h3 className=\"login-instructions\">Username</h3>\r\n                <form onSubmit={ (e) => this.onSubmit(e) }>\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Please type in User\"\r\n                    onChange={ (e) => this.onChange(e)}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GetUsername;","import React, { Component } from 'react'\r\nimport './Message.scss'\r\nimport cat from './annabelle.png';\r\nimport yoda from './yoda.png'\r\n\r\n\r\n\r\n\r\nconst Img = ({src, type}) => {\r\n    return (<img src={src} alt={src} className={type=='file'? 'emojis':'images'}></img>)\r\n}\r\n\r\nclass Message extends Component{\r\n    render () {\r\n        return (            \r\n            <li key={this.props.id} className=\"message-cnt\" >\r\n                <div style={{width:\"50px\", height:\"50px\", backgroundImage: \"grey\"}} className=\"avatar-container\">\r\n                    <img src={this.props.senderId==='User'?`${yoda}`:`${cat}`}/>\r\n                </div>\r\n                <div className=\"info-container\">\r\n                    <div className=\"sender\">\r\n                        <span className=\"message-time\">{this.props.time}</span> \r\n                        <div className=\"message-sender\"> \r\n                            { this.props.senderId }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Message\" >\r\n                        { this.props.text } \r\n                        {this.props.linktext?\r\n                            (<a href={this.props.linktext}>link</a>):null\r\n                        }\r\n                        { this.props.media != null? <Img src={this.props.media.link} type={this.props.media.type}/>:null}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n};\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../App.scss'\r\n\r\nclass TypingIndicator extends Component {\r\n  render() {\r\n    if (this.props.typingUsers.length > 0) {\r\n      return (\r\n        <div className=\"typing-div\">\r\n          {`${this.props.typingUsers\r\n            .slice(0, 2)\r\n            .join(' and ')} is typing`}\r\n        </div>\r\n      )\r\n    }\r\n    return <div />\r\n  }\r\n}\r\n\r\nexport default TypingIndicator","import React, { Component } from 'react'\r\nimport './WhosOnlineList.scss'\r\n\r\nclass WhosOnlineList extends Component {\r\n  renderUsers() {\r\n    return (\r\n      <div>\r\n        <div className=\"user\">\r\n          <div className=\"room-title\">CHATT APP</div>\r\n          <div className=\"user-title\">\r\n            {this.props.users.map((user, index) => {\r\n              if (user.id === this.props.currentUser.id) {\r\n                return (\r\n                  <WhosOnlineListItem key={index} presenceState=\"online\">\r\n                    {user.name} (You) \r\n                  </WhosOnlineListItem>\r\n                )\r\n            }})}\r\n          </div>\r\n        </div>\r\n        <h3 className=\"room-title\">Users Online</h3>\r\n        <ul>\r\n          {this.props.users.map((user, index) => {\r\n            if (user.id === this.props.currentUser.id) {\r\n              return (\r\n                null\r\n              )\r\n            }\r\n            return (\r\n              <WhosOnlineListItem key={index} presenceState={user.presence.state}>\r\n                {user.name}\r\n                <div \r\n                 className=\"send-dm-btn\" onClick={(e) => this.props.sendDM(user)}\r\n                >+</div>\r\n              </WhosOnlineListItem>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.users) {\r\n      return this.renderUsers()\r\n    } else {\r\n      return <p>Loading...</p>\r\n    }\r\n  }\r\n}\r\n\r\nclass WhosOnlineListItem extends Component {\r\n  render() {\r\n    const styles = {\r\n      li: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        paddingTop: 2,\r\n        paddingBottom: 2,\r\n      },\r\n      div: {\r\n        borderRadius: '50%',\r\n        width: 11,\r\n        height: 11,\r\n        marginRight: 10,\r\n      },\r\n    }\r\n    return (\r\n      <li style={styles.li}>\r\n        <div\r\n          style={{\r\n            ...styles.div,\r\n            backgroundColor:\r\n              this.props.presenceState === 'online' ? '#539eff' : '#414756',\r\n          }}\r\n        />\r\n        {this.props.children}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WhosOnlineList;","import React from 'react';\r\nimport './WhosOnlineList.scss'\r\n\r\nclass RoomLink extends React.Component {\r\n    render(){\r\n        const isRoomActive = this.props.room.id === this.props.currentRoom.id ? 'active' : '';\r\n        return (\r\n            <li className={isRoomActive} key={this.props.room.id}  >\r\n                 <a key={this.props.room.id}\r\n                     onClick={(e) => {\r\n                         this.props.subscribeToRoom(this.props.room.id)\r\n                     } }\r\n                     >\r\n                     <span className=\"room-name\"> # {this.props.room.name} </span>\r\n                     {this.props.room.unreadCount > 0 ? (\r\n                        <span className=\"room-unread\">{this.props.room.unreadCount}</span>\r\n                    ): null}\r\n                      \r\n                 </a>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nclass RoomList extends React.Component {\r\n    render () {\r\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id > b.id)\r\n        return (\r\n            <div className=\"rooms-list\">\r\n                <h3 className=\"room-title\">Channels</h3>\r\n                <ul>\r\n                        {orderedRooms.map(room => {\r\n                            if (!room.isPrivate){\r\n                                return ( <RoomLink key={room.id} currentRoom={this.props.currentRoom} room={room} subscribeToRoom={this.props.subscribeToRoom} />)\r\n                            } else {\r\n                                return (\r\n                                    null\r\n                                )\r\n                            }\r\n                        })}\r\n                </ul>\r\n                <h3 className=\"room-title\">Direct Messages</h3>\r\n                <ul>\r\n                        {orderedRooms.map(room => {\r\n                            if (room.isPrivate){\r\n                                return ( <RoomLink key={room.id} currentRoom={this.props.currentRoom} room={room} subscribeToRoom={this.props.subscribeToRoom} />)\r\n                            } else {\r\n                                return (\r\n                                    null\r\n                                )\r\n                            }\r\n                        })}\r\n                </ul>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList","import React from 'react'\r\n\r\nclass NewRoomForm extends React.Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            roomName: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    handleChange(e) {\r\n        this.setState({\r\n            roomName: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.createRoom(this.state.roomName)\r\n        this.setState({roomName: ''})\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div className=\"new-room-form-container\">\r\n                <h3 className=\"room-title\">Create new room</h3>\r\n                <form className=\"new-room-form\" onSubmit={this.handleSubmit} >\r\n                    <input\r\n                        value={this.state.roomName}\r\n                        onChange={this.handleChange}\r\n                        \r\n                        type=\"text\" \r\n                        placeholder=\"Create a room\" \r\n                        \r\n                        className=\"room-input\" />\r\n                    {/* <button id=\"create-room-btn\" type=\"submit\"></button> */}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewRoomForm","import React, { Component } from 'react';\r\nimport Pusher from 'pusher-js';\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userId: this.props.currentUser.id,\r\n      line: [],\r\n      users: this.props.currentUser.users,\r\n      userIds: this.props.currentUser.users.map( (user) => {\r\n        return user.id;\r\n      }),\r\n      data: [],\r\n    }\r\n\r\n    this.pusher = new Pusher('4f21d161f02e7ab3f286', {\r\n      cluster: 'eu',\r\n    });\r\n  }\r\n\r\n  isPainting = false;\r\n\r\n\r\n  colors = [ this.userStrokeStyle, this.user1StrokeStyle, this.user2StrokeStyle ]\r\n  userStrokeStyle = '#EE92C2'; \r\n  user1StrokeStyle = '#F0C987';\r\n  user2StrokeStyle = 'dodgerblue';\r\n\r\n\r\n  line = [];\r\n  userId = this.props.currentUser.id;\r\n  \r\n  prevPos = { offsetX: 0, offsetY: 0 };\r\n\r\n  onMouseDown({ nativeEvent }) {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    this.isPainting = true;\r\n    this.prevPos = { offsetX, offsetY };\r\n  }\r\n\r\n  onMouseMove({ nativeEvent }) {\r\n    if (this.isPainting) {\r\n      const { offsetX, offsetY } = nativeEvent;\r\n      const offSetData = { offsetX, offsetY };\r\n      this.position = {\r\n        start: { ...this.prevPos },\r\n        stop: { ...offSetData },\r\n      };\r\n      this.line = this.line.concat(this.position);\r\n      this.paint(this.prevPos, offSetData, this.userStrokeStyle);\r\n    }\r\n  }\r\n\r\n  endPaintEvent() {\r\n    if (this.isPainting) {\r\n      this.isPainting = false;\r\n      this.sendPaintData();\r\n    }\r\n  }\r\n\r\n  paint(prevPos, currPos, strokeStyle) {\r\n    const { offsetX, offsetY } = currPos;\r\n    const { offsetX: x, offsetY: y } = prevPos;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = strokeStyle;\r\n    this.ctx.moveTo(x, y);\r\n    this.ctx.lineTo(offsetX, offsetY);\r\n    this.ctx.stroke();\r\n    this.prevPos = { offsetX, offsetY };\r\n  }\r\n\r\n\r\nasync sendPaintData() {\r\n  const body = {\r\n    userId: this.userId,\r\n    line: this.line,\r\n  };\r\n\r\n  const req = await fetch('http://localhost:4000/paint', {\r\n    method: 'post',\r\n    body: JSON.stringify( body ),\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n  });\r\n \r\n  const res = await req.json();\r\n  console.log(res)\r\n  this.line = [];\r\n  \r\n}\r\n\r\n  componentWillUnmount(){\r\n    Promise.resolve()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.canvas.width = 1000;\r\n    this.canvas.height = 800;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.ctx.lineJoin = 'round';\r\n    this.ctx.lineCap = 'round';\r\n    this.ctx.lineWidth = 5;\r\n\r\n    const channel = this.pusher.subscribe('painting');\r\n    channel.bind('draw', (data) => {\r\n      const { userId, line } = data;\r\n      if (userId !== this.userId) {\r\n        line.forEach((position) => {\r\n          this.paint(position.start, position.stop, this.user1StrokeStyle);\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <canvas\r\n        ref={(ref) => (this.canvas = ref)}\r\n        style={{ background: 'black', zIndex:'100000000000'}}\r\n        onMouseDown={ (e) => this.onMouseDown(e)}\r\n        onMouseLeave={ (e) => this.endPaintEvent(e)}\r\n        onMouseUp={ (e) => this.endPaintEvent(e)}\r\n        onMouseMove={ (e) => this.onMouseMove(e)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;","import React, { Component } from \"react\";\r\nimport \"./Menu.scss\";\r\nimport WhosOnlineList from './WhosOnlineList';\r\nimport RoomList from './RoomList';\r\nimport NewRoomForm from './NewRoom';\r\nimport './WhosOnlineList.scss';\r\nimport Canvas from './components';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Paint extends Component {\r\n\r\n  \r\n  render(){\r\n    return (\r\n      <div>\r\n        <h3 className=\"room-title\">Painting Space</h3>\r\n        <div className=\"main\">\r\n          <div className=\"color-guide\">\r\n          <button onClick={this.props.handleClick} className=\"switch-button\">Switch</button>\r\n        </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    var visibility = \"hide\";\r\n \r\n    if (this.props.menuVisibility) {\r\n      visibility = \"show\";\r\n    }\r\n\r\n    return (\r\n      <div id=\"flyoutMenu\" \r\n        onMouseDown={this.props.handleMouseDown} \r\n        className={visibility} >\r\n            <div className=\"fly-container\">\r\n                <WhosOnlineList\r\n                  currentUser={this.props.currentUser}\r\n                  users={this.props.currentRoom.users}\r\n                  room={this.props.currentRoom.name}\r\n                  className=\"whosOnlineListContainer\"\r\n                  sendDM={this.props.sendDM}\r\n                />\r\n                <RoomList   \r\n                  currentRoom={this.props.currentRoom}\r\n                  currentUser={this.props.currentUser}\r\n                  subscribeToRoom={this.props.subscribeToRoom}\r\n                  rooms={this.props.rooms}\r\n                />\r\n                <NewRoomForm \r\n                  createRoom={this.props.createRoom} \r\n                  currentUser={this.props.currentUser} \r\n                />\r\n                <Paint \r\n                  handleClick={this.props.handleClick} \r\n                />\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from \"react\";\r\n// import MenuButton from './MenuButton'\r\nimport Menu from './Menu'\r\nimport './Menu.scss'\r\n\r\n\r\n \r\nclass MenuContainer extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n  handleMouseDown(e) {\r\n    this.toggleMenu();\r\n    e.stopPropagation();\r\n  }\r\n   \r\n  toggleMenu() {\r\n    this.setState({\r\n        visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu-container\">\r\n        {/* <MenuButton handleMouseDown={e => this.handleMouseDown(e)}/> */}\r\n          <Menu \r\n            handleMouseDown={e => this.handleMouseDown}\r\n            menuVisibility={this.state.visible} \r\n            currentUser={this.props.currentUser}\r\n            currentRoom={this.props.currentRoom}\r\n            users={this.props.currentRoom.users}\r\n            subscribeToRoom={this.props.subscribeToRoom}\r\n            rooms={this.props.rooms}\r\n            createRoom={this.props.createRoom}\r\n            handleClick={this.props.handleClick}\r\n            sendDM={this.props.sendDM}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MenuContainer;","import axios from 'axios';\r\n\r\nfunction onDrop(pictureFiles) {\r\n  this.setState({\r\n    pictures: this.state.pictures.concat(pictureFiles)\r\n  });\r\n}\r\n\r\nfunction openImageUploadDialog() {\r\n  console.log(this.state.showImageUploadDialog)\r\n  this.setState({\r\n    showImageUploadDialog: true\r\n  });\r\n}\r\n\r\nfunction closeImageUploadDialog() {\r\n  this.setState({\r\n    showImageUploadDialog: false\r\n  });\r\n}\r\n\r\nfunction toggleEmojiPicker() {\r\n  this.setState({\r\n    showEmojiPicker: !this.state.showEmojiPicker,\r\n  });\r\n}\r\n\r\n// function addEmoji(emoji) {\r\n//   const { newMessage } = this.state;\r\n//   const text = `${newMessage}${emoji.native}`;\r\n\r\n//   this.setState({\r\n//     newMessage: text,\r\n//     showEmojiPicker: false,\r\n//   });\r\n// }\r\n\r\nfunction sendFile(event) {\r\n    event.preventDefault();\r\n    const { currentUser, fileUploadMessage, pictures, currentRoom } = this.state;\r\n\r\n    if (pictures.length === 0) return;\r\n\r\n    const parts = [];\r\n    console.log(fileUploadMessage)\r\n    if (fileUploadMessage.trim() !== \"\") {\r\n      parts.push({\r\n        type: \"text/plain\",\r\n        content: fileUploadMessage\r\n      });\r\n    }\r\n\r\n    pictures.forEach(pic => {\r\n      parts.push({\r\n        file: pic\r\n      });\r\n    });\r\n\r\n    currentUser.sendMultipartMessage({\r\n      roomId: `${currentRoom.id}`,\r\n      parts\r\n    });\r\n\r\n    this.setState({\r\n      fileUploadMessage: \"\",\r\n      pictures: [],\r\n      showImageUploadDialog: false\r\n    });\r\n}\r\n\r\n\r\n\r\n// function updateLanguage(event) {\r\n//   const { value } = event.target;\r\n//   const { messages } = this.state;\r\n//   this.setState(\r\n//     {\r\n//       language: value,\r\n//     },\r\n//     () => {\r\n//       messages.forEach(message => {\r\n//         translateText.call(this, message);\r\n//       });\r\n//     }\r\n//   );\r\n// }\r\n\r\n// function translateText(message) {\r\n//   const { language, messages } = this.state;\r\n//   const { text, key } = message;\r\n\r\n//   console.log(language)\r\n//   console.log(messages)\r\n//   axios\r\n//     .post('http://localhost:4000/translate', {\r\n//       text,\r\n//       lang: language,\r\n//     })\r\n//     .then(response => {\r\n//       const index = messages.findIndex(item => {\r\n//         console.log(item)\r\n//         return item.key === key\r\n//       });\r\n//       console.log(index)\r\n\r\n    \r\n\r\n//       const msg = {\r\n//         ...message,\r\n//         text: response.data.TranslatedText,\r\n//       };\r\n\r\n     \r\n   \r\n//       if (index !== -1) {\r\n//         messages.splice(index, 1, msg);\r\n//       } else {\r\n//         messages.push(msg);\r\n//       }\r\n      \r\n//       this.setState({\r\n//         messages: messages.sort((a, b) => {\r\n//           console.log(a)\r\n//           return new Date(a.createdAt) - new Date(b.createdAt);\r\n//         }),\r\n//         // messages: messages,\r\n//       });\r\n      \r\n//     })\r\n//     .catch(console.error)\r\n// }\r\n\r\n\r\nfunction handleSlashCommand(message) {\r\n  const cmd = message.split(\" \")[0];\r\n  const query = message.slice(cmd.length)\r\n\r\n  if (cmd !== \"/news\") {\r\n    alert(`${cmd} is not a valid command`);\r\n    return;\r\n  }\r\n\r\n   return sendNews.call(this, query);\r\n}\r\n\r\n\r\n\r\nfunction sendNews(query) {\r\n  const { currentUser, currentRoom } = this.state;\r\n\r\n  fetch(`https://newsapi.org/v2/everything?q=${query}&pageSize=3&apiKey=2b676df86424467b88261f62eb567899`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      const parts = [];\r\n      data.articles.forEach(article => {\r\n        parts.push({\r\n          type: \"text/plain\",\r\n          content: `${article.title} - ${article.source.name} - ${article.url}`\r\n        });\r\n      });\r\n      console.log(parts)\r\n\r\n      currentUser.sendMultipartMessage({\r\n        roomId: `${currentRoom.id}`,\r\n        parts: [parts[0]]\r\n      });\r\n     \r\n    })\r\n    .catch(console.error);\r\n}\r\n\r\nexport {\r\n  onDrop,\r\n  sendFile,\r\n  toggleEmojiPicker,\r\n  // addEmoji,\r\n  openImageUploadDialog,\r\n  closeImageUploadDialog,\r\n  handleSlashCommand,\r\n  // updateLanguage,\r\n  // translateText,\r\n  sendNews\r\n};","import React from 'react';\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { X } from 'react-feather';\r\nimport './ImageUploadDialog.scss'\r\n\r\nconst ImageUploadDialog = (props) => {\r\n  const { onDrop, closeImageUploadDialog, handleInput, fileUploadMessage, sendFile, sendMessage } = props;\r\n\r\n  return (\r\n    <div className=\"dialog-container\">\r\n      <div className=\"file-dialog\">\r\n        <header>\r\n          <h4>Upload an image</h4>\r\n          <button onClick={closeImageUploadDialog} className=\"btn\">\r\n            <X></X>\r\n          </button>\r\n        </header>\r\n        <form onSubmit={sendFile}>\r\n          <input placeholder=\"Add a message about this image\" type=\"text\" onChange={handleInput} value={fileUploadMessage} name=\"fileUploadMessage\" />\r\n          <ImageUploader\r\n            withIcon={false}\r\n            buttonText=\"Choose images\"\r\n            onChange={onDrop}\r\n            imgExtension={[\".jpg\", \".jpeg\", \".png\", \".gif\"]}\r\n            maxFileSize={5242880}\r\n            withPreview={true}\r\n          />\r\n          <button type=\"submit\" className=\"submit-btn\">Upload</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUploadDialog;","import React, { Component } from \"react\";\r\n// import MenuButton from './MenuButton'\r\nimport Menu from './Menu'\r\nimport './Menu.scss'\r\nimport './UpperContainer.scss'\r\n\r\nclass UpperContainer extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n     \r\n    return (\r\n      <div className=\"menu-container\">\r\n            <div className=\"info-cnt\">\r\n                <div>#{this.props.currentRoom.name}</div>\r\n            </div>\r\n            <div className=\"work-cnt\">\r\n                <div>Members: {this.props.currentRoom.userIds? this.props.currentRoom.userIds.length:null}</div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default UpperContainer;","import React, { Component } from 'react'\r\nimport '../App.scss';\r\nimport Chatkit from '@pusher/chatkit-client';\r\nimport Message from './Message';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport MenuContainer from './Nav';\r\nimport Canvas from \"./components\";\r\nimport { Image, Smile } from \"react-feather\";\r\nimport {\r\n  onDrop,\r\n  openImageUploadDialog,\r\n  closeImageUploadDialog,\r\n  sendFile,\r\n  // updateLanguage,\r\n  // translateText\r\n  handleSlashCommand,\r\n  sendNews\r\n} from \"../methods\";\r\nimport ImageUploadDialog from \"./ImageUploadDialog\";\r\nimport { format } from 'date-fns';\r\nimport UpperContainer from './UpperContainer'\r\nimport './ImageUploadDialog.scss'\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport JSEMOJI from 'emoji-js';\r\nimport 'emoji-picker-react/dist/universal/style.scss'; \r\nimport Picker from 'react-giphy-component';\r\nimport { css } from 'glamor';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n// Global code for Emojis\r\nlet jsemoji = new JSEMOJI();\r\njsemoji.img_set = 'emojione';\r\njsemoji.img_sets.emojione.path = 'https://cdn.jsdelivr.net/emojione/assets/3.0/png/32/';\r\nconsole.log(jsemoji.img_sets.emojione.path)\r\njsemoji.supports_css = false;\r\njsemoji.allow_native = false;\r\njsemoji.init_env();\r\njsemoji.replace_mode = 'unified';\r\n\r\n\r\nclass Chat extends Component {  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      currentRoom: {},\r\n      roomId: \"112f0357-01d9-4159-b900-a13dbda2c6cd\",\r\n      currentUser: {},\r\n      typingUsers: [],\r\n      chatInput: \"\",\r\n      joinableRooms: [],\r\n      joinedRooms: [],\r\n      newMessage: \"\",\r\n      paint: false,\r\n      rooms: [],\r\n      pictures: [],\r\n      showImageUploadDialog: false,\r\n      fileUploadMessage: \"\",\r\n      showEmojiPicker: false,\r\n      openGiphyPicker: false,\r\n      emoji: [],\r\n      gifs: [],\r\n      language: 'auto',\r\n    }      \r\n    this.getRooms = this.getRooms.bind(this);\r\n    this.onDrop = onDrop.bind(this);\r\n    this.openImageUploadDialog = openImageUploadDialog.bind(this);\r\n    this.closeImageUploadDialog = closeImageUploadDialog.bind(this);\r\n    this.sendFile = sendFile.bind(this);\r\n    // this.updateLanguage = updateLanguage.bind(this);\r\n  }   \r\n  \r\n  componentWillUnmount(){\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  sendMessage(currentUser) {\r\n    const parts = [];\r\n\r\n    if (this.state.newMessage.startsWith(\"/\")) {\r\n      handleSlashCommand.call(this, this.state.newMessage);\r\n    }\r\n    \r\n    parts.push({\r\n      type: \"text/plain\",\r\n      text: `${this.state.newMessage}`,\r\n      content: `${this.state.newMessage}`\r\n    });\r\n\r\n    if (this.state.emoji) {\r\n      this.state.emoji.forEach(emoji => {\r\n        parts.push({\r\n          url: emoji,\r\n          type: \"gif\",\r\n          className: \"img-emoji\"\r\n        });\r\n        console.log(parts)\r\n      });\r\n    }\r\n\r\n    if (this.state.gifs) {\r\n      this.state.gifs.forEach(gif => {\r\n        parts.push({\r\n          url: gif,\r\n          type: \"image/gif\",\r\n          className: \"gif\"\r\n        });\r\n        console.log(parts)\r\n      });\r\n    }\r\n\r\n    if(this.state.chatInput){\r\n      currentUser.sendMultipartMessage({\r\n        // text: this.state.chatInput,\r\n        roomId: this.state.currentRoom.id,\r\n        parts\r\n      })\r\n    }  \r\n\r\n    this.setState({ \r\n      chatInput: \"\",\r\n      emoji: [],\r\n      parts: [],\r\n      gifs: [],\r\n      newMessage: \"\",\r\n    })   \r\n       \r\n  }       \r\n\r\n  handleInput(event){\r\n    this.setState({\r\n      fileUploadMessage: event.target.value,\r\n    })\r\n  }\r\n\r\n  handleClick(){\r\n    if ( !this.state.paint ){\r\n        this.setState({\r\n            paint: true,\r\n        })\r\n    } else {\r\n        this.setState({\r\n            paint: false,\r\n        })\r\n    }\r\n  } \r\n\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n    this.sendMessage(this.state.currentUser);\r\n  }   \r\n\r\n  sendTypingEvent(event) {\r\n    this.state.currentUser\r\n      .isTypingIn({ roomId: this.state.roomId, })\r\n      .catch(error => console.error('error', error))\r\n      this.setState({\r\n        chatInput: event.target.value,\r\n        newMessage: event.target.value\r\n    });\r\n  }\r\n\r\n  getRooms() {\r\n    this.state.currentUser.getJoinableRooms()\r\n    .then(joinableRooms => {\r\n        this.setState({\r\n            joinableRooms,\r\n            joinedRooms: this.state.currentUser.rooms\r\n        })\r\n    })\r\n    .catch(err => console.log('error on joinableRooms: ', err))\r\n  }\r\n\r\n  subscribeToRoom(roomId) {\r\n    const {currentUser, currentRoom} = this.state;\r\n      \r\n    this.setState({\r\n      messages: [],\r\n    })\r\n\r\n    return currentUser.subscribeToRoom({\r\n          roomId: roomId,\r\n          messageLimit: 100,\r\n          hooks: {\r\n            onMessage: message => {\r\n          \r\n              // console.log(message.text)    \r\n              \r\n                let newMessages = this.state.messages;   \r\n                // {translateText.call(this, message)}\r\n                newMessages.push(<Message \r\n                  currentUser= {\r\n                    this.state.currentUser\r\n                  }\r\n                  \r\n                  media={message.attachment}\r\n                  time = { format(new Date(`${message.updatedAt}`), 'HH:mm') }\r\n                  key={ \r\n                    this.state.messages.length \r\n                  } \r\n                  senderId={ \r\n                    message.senderId \r\n                  }\r\n                  text={ message.text \r\n                  }\r\n                  linktext={message.text.match(/\\b(http|https)?:\\/\\/\\S+/gi) || null}/>)         \r\n                  {this.setState({messages: newMessages})}\r\n                  // () => this.showNotification(message));\r\n                  \r\n                  if (currentRoom === null) return;\r\n              return currentUser.setReadCursor({\r\n                roomId: roomId,\r\n                position: message.id,\r\n              });           \r\n            },\r\n            onRoomUpdated: room => {\r\n              const { rooms } = this.state;\r\n              const index = rooms.findIndex(r => r.id === room.id);\r\n              rooms[index] = room;\r\n              this.setState({\r\n                rooms,\r\n              });\r\n              \r\n            },\r\n            onUserStartedTyping: user => {\r\n              this.setState({\r\n                typingUsers: [...this.state.typingUsers, user.name],\r\n              })\r\n            },\r\n            onUserStoppedTyping: user => {\r\n              this.setState({\r\n                typingUsers: this.state.typingUsers.filter(\r\n                  username => username !== user.name\r\n                ),\r\n              })\r\n            },\r\n            onPresenceChange: () => this.forceUpdate(),\r\n            \r\n\r\n          \r\n          },\r\n    })   \r\n\r\n    // .then(this.setState({\r\n    //   currentUser,\r\n    // }, () => this.grantNotificationPermission()\r\n    // ))\r\n    .then(currentRoom => {\r\n      this.setState({ currentRoom })\r\n    })\r\n    .then( this.getRooms())\r\n    .catch(error => console.error('error', error))\r\n  }\r\n  \r\n  showEmojiPicker() {\r\n    this.setState({\r\n      openEmojiPicker: !this.state.openEmojiPicker,\r\n    })\r\n  }\r\n\r\n  showGiphyPicker() {\r\n    this.setState({\r\n      openGiphyPicker: !this.state.openGiphyPicker,\r\n    })\r\n  }\r\n\r\n  sendDM(ids){\r\n    const rooms = [this.state.currentUser.rooms]\r\n    const roomName = `${this.state.currentUser.id}_${ids.id}`;\r\n\r\n    const isPrivateChatCreated = this.state.currentUser.rooms.filter( (room) => {\r\n      if (room.customData && room.customData.isDirectMessage) {\r\n        \r\n          const arr = [this.state.currentUser.id, ids.id];\r\n          const { userIds } = room.customData;\r\n    \r\n          if (arr.sort().join('') === userIds.sort().join('')) {\r\n            return {\r\n              room,\r\n            };\r\n          }\r\n        }\r\n    });\r\n    \r\n    if (isPrivateChatCreated.length > 0) {\r\n        const room = isPrivateChatCreated[0];\r\n        this.getRooms()\r\n        return Promise.resolve(room);\r\n    } else {\r\n      this.state.currentUser.createRoom({\r\n          name: roomName,\r\n          private: true,\r\n          addUserIds: [ids.id],\r\n          userIds: [this.state.currentUser.id, ids.id],\r\n          users: [this.state.currentUser.id, ids.id],\r\n          customData: {\r\n            isDirectMessage: true,\r\n            userIds: [this.state.currentUser.id, ids.id],\r\n          },\r\n      })\r\n      .then(room => this.subscribeToRoom(room.id))\r\n      .then(room => ids.subscribeToRoom(room.id))\r\n      .then(this.getRooms())\r\n      .catch(err => console.log('error with createRoom: ', err))\r\n    }\r\n  }\r\n\r\n  // grantNotificationPermission = () => {\r\n  //   if (!('Notification' in window)) {\r\n  //     alert('This browser does not support system notifications');\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (Notification.permission === 'granted') {\r\n  //     new Notification('You are already subscribed to message notifications');\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (\r\n  //     Notification.permission !== 'denied' ||\r\n  //     Notification.permission === 'default'\r\n  //   ) {\r\n  //     Notification.requestPermission().then(result => {\r\n  //       if (result === 'granted') {\r\n  //         new Notification(\r\n  //           'Awesome! You will start receiving notifications shortly'\r\n  //         );\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // showNotification = message => {\r\n  //   const { username } = this.state;\r\n\r\n  //     if (message.senderId !== username) {\r\n  //       const title = message.senderId;\r\n  //       const body = message.text;\r\n\r\n  //       new Notification(title, { body });\r\n  //     }\r\n\r\n  // // };\r\n  \r\n  addEmoji(e, object, event) {\r\n    const { newMessage } = this.state;\r\n    let emoji = jsemoji.replace_colons(`:${object.name}:`);\r\n    const text = `${newMessage}:${object.name}:`;\r\n    let path = `${jsemoji.img_sets.emojione.path}${object.unified}.png`\r\n\r\n    this.setState({\r\n      openEmojiPicker: false,\r\n      chatInput: `${this.state.chatInput}${text}`,\r\n      newMessage: `${this.state.chatInput}`,\r\n      emoji: [...this.state.emoji, path]\r\n    });\r\n  }\r\n\r\n  createRoom(name) {\r\n    this.state.currentUser.createRoom({\r\n      name,\r\n      addUserIds: [ ...(this.state.currentUser.users.map( (user) =>{\r\n        return user.id;\r\n      }) ) ],\r\n      customData: {\r\n        isDirectMessage: false,\r\n      },\r\n    })\r\n    .then(room => this.subscribeToRoom(room.id))\r\n    .then(this.getRooms())\r\n    .catch(err => console.lo2g('error with createRoom: ', err))\r\n  }\r\n\r\n  componentDidMount() {\r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'v1:us1:bca0fa4c-b9c7-4478-a63d-ad0d81584e73',\r\n      userId: this.props.currentUsername,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/bca0fa4c-b9c7-4478-a63d-ad0d81584e73/token',\r\n      }),\r\n      \r\n    })\r\n    chatManager\r\n      .connect()\r\n      .then(currentUser => {\r\n        this.setState({ currentUser})\r\n        this.getRooms()\r\n        this.subscribeToRoom( this.state.roomId )\r\n      })      \r\n      .catch(error => console.error('error', error))\r\n  }   \r\n  \r\n  log (gif) {\r\n    this.setState({\r\n      chatInput: [gif.downsized.url],\r\n      gifs: [gif.downsized.url],\r\n      openGiphyPicker: !this.state.openGiphyPicker,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {currentUser, currentRoom, joinableRooms, joinedRooms, roomId, paint, typingUsers, messages, chatInput, showImageUploadDialog,\r\n    fileUploadMessage, openEmojiPicker, newMessage, openGiphyPicker, language} = this.state\r\n    \r\n    const ROOT_CSS = css({\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n\r\n    return ( \r\n      <div className=\"container\">\r\n        <div className=\"sidebar-container\">\r\n            <MenuContainer currentUser={currentUser}\r\n                            users={currentRoom.users}\r\n                            subscribeToRoom={ (e) => this.subscribeToRoom(e)}\r\n                            currentRoom={currentRoom}\r\n                            rooms={[...joinableRooms, ...joinedRooms]}\r\n                            roomId={roomId}\r\n                            createRoom={ (e) => this.createRoom(e)}\r\n                            handleClick={  (e) => this.handleClick(e)}\r\n                            sendDM={ (e) => this.sendDM(e)}\r\n                            handleMouseDown={ (e) => this.handleMouseDown(e) } \r\n            />\r\n             {/* {currentRoom ? (\r\n                <select\r\n                  id=\"language\"\r\n                  className=\"language\"\r\n                  name=\"language\"\r\n                  value={language}\r\n                  onChange={(e) => this.updateLanguage(e)}\r\n                >\r\n                  <option value=\"en\">English</option>\r\n                  <option value=\"fr\">French</option>\r\n                  <option value=\"es\">Spanish</option>\r\n                  <option value=\"de\">German</option>\r\n                </select>\r\n              ) : null} */}\r\n        </div>\r\n        <div className=\"messanger-container\">\r\n          <div className=\"upper-container\"> \r\n            <UpperContainer currentUser={currentUser}\r\n                        users={currentRoom.users}\r\n                        currentRoom={currentRoom}\r\n                        rooms={[...joinableRooms, ...joinedRooms]}\r\n                        roomId={roomId}\r\n            />\r\n          </div>\r\n          <div className=\"lower-container\">\r\n            <div className=\"main-body-wrapper\">\r\n           {(paint === true)? \r\n            (\r\n              <Canvas currentUser={currentUser} />\r\n            ) : (\r\n            <div className=\"messages-list\">\r\n              \r\n                <ul className=\"messages\">\r\n                <ScrollToBottom className={ ROOT_CSS }>\r\n                  {messages} \r\n                  </ScrollToBottom>\r\n                </ul>\r\n\r\n                {/* {messageList}\r\n           */}\r\n                {/* <TypingIndicator typingUsers={typingUsers} /> \r\n                <form id=\"chat-form\"\r\n                  className=\"composer-container\"\r\n                  value={ chatInput } \r\n                  onSubmit={ (e) => this.onSubmit(e)}\r\n                >  \r\n                <button\r\n                    onClick={this.openImageUploadDialog}\r\n                    type=\"button\"\r\n                    className=\"btn image-picker\"\r\n                  ><Image/> </button>             \r\n                <input \r\n                       type=\"text\"\r\n                       className=\"composer\"\r\n                       placeholder='Type message...'\r\n                       name=\"\"\r\n                       value={ chatInput } \r\n                       autoFocus={true} \r\n                       onChange={ e => this.sendTypingEvent(e) } \r\n                       />                 \r\n               </form>\r\n               {showImageUploadDialog ? (\r\n              <ImageUploadDialog\r\n                handleInput={ e => this.handleInput(e)}\r\n                // sendMessage={this.sendMessage}\r\n                // value={ chatInput } \r\n                // onSubmit={ (e) => this.onSubmit(e)}\r\n                fileUploadMessage={fileUploadMessage}\r\n                onDrop={this.onDrop}\r\n                sendFile={this.sendFile}\r\n                closeImageUploadDialog={this.closeImageUploadDialog}\r\n              /> */}\r\n            {/* ) : null}                */}\r\n            </div>  )}\r\n            \r\n          \r\n          </div>\r\n            <div className=\"side-container\">Jestem z boku!</div>\r\n          </div>\r\n          <div className=\"bottom-cnt\">\r\n            <div className=\"wrap\">\r\n              \r\n              <form id=\"chat-form\"\r\n                className=\"composer-container\"\r\n                value={ chatInput } \r\n                onSubmit={ (e) => this.onSubmit(e)}\r\n              >  \r\n              <button\r\n                  onClick={this.openImageUploadDialog}\r\n                  type=\"button\"\r\n                  className=\"btn image-picker\"\r\n                ><Image/> </button> \r\n                \r\n              <div style={{width: \"100%\", minHeight:\"0\", display:\"flex\", border:\"1px solid black\", borderRadius:\"5px\"}}>            \r\n                <input \r\n                       type=\"text\"\r\n                       className=\"composer\"\r\n                       placeholder='Type message...'\r\n                       name=\"\"\r\n                       value={ chatInput } \r\n                  \r\n                       autoFocus={true} \r\n                       onChange={ e => this.sendTypingEvent(e) } \r\n                       />     \r\n\r\n                  <button\r\n                    onClick={(e) => this.showEmojiPicker(e)}\r\n                    type=\"button\"\r\n                    className=\"btn emoi-picker\"\r\n                  >  \r\n                    <Smile style={{backgroundColor: \"#fff\"}}/>  \r\n                  </button> \r\n                  <button type=\"button\" className=\"giphy-button\" onClick={(e)=>this.showGiphyPicker(e)}>\r\n                    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"icons\" className=\"svg-inline--fa fa-icons fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M116.65 219.35a15.68 15.68 0 0 0 22.65 0l96.75-99.83c28.15-29 26.5-77.1-4.91-103.88C203.75-7.7 163-3.5 137.86 22.44L128 32.58l-9.85-10.14C93.05-3.5 52.25-7.7 24.86 15.64c-31.41 26.78-33 74.85-5 103.88zm143.92 100.49h-48l-7.08-14.24a27.39 27.39 0 0 0-25.66-17.78h-71.71a27.39 27.39 0 0 0-25.66 17.78l-7 14.24h-48A27.45 27.45 0 0 0 0 347.3v137.25A27.44 27.44 0 0 0 27.43 512h233.14A27.45 27.45 0 0 0 288 484.55V347.3a27.45 27.45 0 0 0-27.43-27.46zM144 468a52 52 0 1 1 52-52 52 52 0 0 1-52 52zm355.4-115.9h-60.58l22.36-50.75c2.1-6.65-3.93-13.21-12.18-13.21h-75.59c-6.3 0-11.66 3.9-12.5 9.1l-16.8 106.93c-1 6.3 4.88 11.89 12.5 11.89h62.31l-24.2 83c-1.89 6.65 4.2 12.9 12.23 12.9a13.26 13.26 0 0 0 10.92-5.25l92.4-138.91c4.88-6.91-1.16-15.7-10.87-15.7zM478.08.33L329.51 23.17C314.87 25.42 304 38.92 304 54.83V161.6a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.48-64 48s28.65 48 64 48c35.2 0 63.73-21.32 64-47.66V99.66l112-17.22v47.18a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.48-64 48s28.65 48 64 48c35.2 0 63.73-21.32 64-47.66V32c0-19.48-16-34.42-33.92-31.67z\"></path></svg>\r\n                  </button>\r\n              </div>  \r\n            </form>\r\n\r\n              <TypingIndicator typingUsers={typingUsers} /> \r\n\r\n              {openGiphyPicker? (\r\n              <div className=\"giphy-dialog\">\r\n                  <Picker onSelected={this.log.bind(this)} />\r\n                </div>) : null\r\n              }\r\n               \r\n              {openEmojiPicker? (\r\n                (<div className=\"dialog-emoji-container\">\r\n                   <div className=\"dialog-emoji\">\r\n                      <EmojiPicker onEmojiClick={(e, object, event) => this.addEmoji(e, object, event)} />\r\n                   </div>\r\n                 </div>)\r\n              ) : null}    \r\n               \r\n              {showImageUploadDialog ? (\r\n                <ImageUploadDialog\r\n                  handleInput={ e => this.handleInput(e)}\r\n                  // sendMessage={this.sendMessage}\r\n                  // value={ chatInput } \r\n                  // onSubmit={ (e) => this.onSubmit(e)}\r\n                  fileUploadMessage={fileUploadMessage}\r\n                  onDrop={this.onDrop}\r\n                  sendFile={this.sendFile}\r\n                  closeImageUploadDialog={this.closeImageUploadDialog}\r\n                /> \r\n                \r\n                ) : null}    \r\n                  \r\n              \r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      ); \r\n  }\r\n\r\n}\r\n\r\nexport default Chat","import React, {\r\n  Component\r\n} from 'react'\r\nimport GetUsername from './components/GetUsername';\r\nimport Chat from './components/Chat'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    currentUsername: 'User',\r\n    visibleScreen: \"Chat\"\r\n  }\r\n\r\n  // Authenticate users\r\n  onUsernameSubmitted(username, password) {\r\n    fetch('http:localhost:4000/users', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          password\r\n        }),\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          currentUsername: username,\r\n          visibleScreen: 'Chat'\r\n        })\r\n      })\r\n      .catch(error => console.error('error', error))\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visibleScreen,\r\n      currentUsername\r\n    } = this.state;\r\n\r\n    if (visibleScreen === 'getUsernameScreen') {\r\n      return <GetUsername onSubmit = {\r\n        (e) => this.onUsernameSubmitted(e)\r\n      }\r\n      />\r\n    }\r\n\r\n    if (visibleScreen === 'Chat') {\r\n\r\n      return <Chat currentUsername = {\r\n        currentUsername\r\n      }\r\n      />\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/annabelle.d5f1cd84.png\";","module.exports = __webpack_public_path__ + \"static/media/yoda.5db778e4.png\";"],"sourceRoot":""}